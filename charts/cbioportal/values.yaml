# Name of the deployment. This is used for pods, services, etc.
name: cbioportal

# Deployment annotations
deploymentAnnotations:
  deployment.kubernetes.io/revision: "4"

# Custom labels for deployment metadata
labels: {}

# Pod replicas
replicas: 1

# Metadata
creationTimestamp: "null"
generation: 1

# Pod volumes
podVolumes: []

# Pod Volume Mounts
podVolumeMounts: []

# Node group
nodeSelector:
  label: "node-group"
  value: "cbioportal"

# Pod strategy
rollingUpdate:
  maxSurge: 2
  maxUnavailable: 1

# Pod labels
podLabels: {}

# Enable/Disable and define configmaps and secrets
configMapRef:
  enabled: 0
  ref: "custom-config-map"

secretRef:
  enabled: 0
  ref: "custom-secret-ref"

# Primary container
container:
  image: cbioportal/cbioportal:6.0.17-web-shenandoah
  cmd: "java"
  env:
    - name: DB_USER
      value: "db-user"
    - name: DB_PASSWORD
      value: "db-pwd"
    - name: DB_CONNECTION_STRING
      value: "db-connection-url"

# Pod annotations
podAnnotations:
  admission.datadoghq.com/java-lib.version: v1.24.2

# Readiness Probe spec. Follow the kubernetes spec definition
readinessProbe:
  httpGet:
    path: /api/health
    port: 8080
  initialDelaySeconds: 45
  timeoutSeconds: 1
  periodSeconds: 5
  failureThreshold: 3

# Liveness Probe spec. Follow the kubernetes spec definition
livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 180
  timeoutSeconds: 1
  periodSeconds: 12
  failureThreshold: 5

# Container Ports
containerPorts:
  - containerPort: 8080
    protocol: TCP
  - containerPort: 8849
    protocol: TCP

# Container resources
containerResources: {}

# Pod tolerations
podTolerations:
  - key: "node-group"
    operator: "Equal"
    value: "cbioportal"
    effect: "NoSchedule"

terminationMessagePath: /dev/termination-log
terminationMessagePolicy: File

dnsPolicy: ClusterFirst

restartPolicy: Always

schedulerName: default-scheduler

securityContext: {}

terminationGracePeriodSeconds: 30

status: {}

# Service Name
serviceName: cbioportal

# Service ports
servicePorts:
  - port: 80
    name: http
    targetPort: 8080

# Args for the java command in the container
containerArgs: [
  "-Xms2g",
  "-Xmx4g",
  "-jar",
  "/cbioportal-webapp/app.jar",
  "--authenticate=false",
  "--session.service.url=http://cbioportal-session:5001/api/sessions/my_portal/",
  "--db.user=$(DB_USER)",
  "--db.password=$(DB_PASSWORD)",
  "--spring.datasource.driver-class-name=com.mysql.jdbc.Driver",
  "--spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect",
  "--spring.datasource.url=$(DB_CONNECTION_STRING)",
  "--spring.datasource.username=$(DB_USER)",
  "--spring.datasource.password=$(DB_PASSWORD)",
]